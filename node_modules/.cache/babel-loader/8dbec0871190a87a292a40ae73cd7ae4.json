{"ast":null,"code":"var _jsxFileName = \"/home/nisgia/Desktop/generic_filtering/src/SelectMultiple.js\";\nimport React, { useEffect, useState } from 'react';\nimport { OutlinedInput, InputLabel, MenuItem, FormControl, ListItemText, Select, Checkbox } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 400\n    }\n  }\n};\nexport function SelectMultiple(_ref) {\n  let {\n    filterType,\n    filterOptions,\n    filters,\n    setFilters\n  } = _ref;\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setFilters(value);\n  };\n\n  const handleCheckboxChange = option => {\n    const currentIndex = filters.indexOf(option);\n    const newFilters = [...filters];\n\n    if (currentIndex === -1) {\n      newFilters.push(option);\n    } else {\n      newFilters.splice(currentIndex, 1);\n    }\n\n    setFilters(newFilters);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px 20px 20px 0'\n    },\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        style: {\n          paddingLeft: 10\n        },\n        children: filterType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        value: filters,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: filterType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 26\n        }, this),\n        renderValue: selected => selected.join(', '),\n        MenuProps: MenuProps,\n        children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: filters.indexOf(option) > -1,\n            onChange: () => handleCheckboxChange(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 27\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n_c = SelectMultiple;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectMultiple\");","map":{"version":3,"sources":["/home/nisgia/Desktop/generic_filtering/src/SelectMultiple.js"],"names":["React","useEffect","useState","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","SelectMultiple","filterType","filterOptions","filters","setFilters","handleChange","event","value","target","handleCheckboxChange","option","currentIndex","indexOf","newFilters","push","splice","margin","paddingLeft","selected","join","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,aAAR,EACEC,UADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,MALF,EAMEC,QANF,QAOO,mBAPP;;AASA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AAUA,OAAO,SAASC,cAAT,OAA4E;AAAA,MAApD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA;AAAtC,GAAoD;;AACjF,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAH,IAAAA,UAAU,CAACG,KAAD,CAAV;AACH,GAHD;;AAKA,QAAME,oBAAoB,GAAIC,MAAD,IAAY;AACrC,UAAMC,YAAY,GAAGR,OAAO,CAACS,OAAR,CAAgBF,MAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGV,OAAJ,CAAnB;;AAEA,QAAIQ,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,MAAhB;AACH,KAFD,MAEO;AACHG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACH;;AAEDP,IAAAA,UAAU,CAACS,UAAD,CAAV;AACH,GAXD;;AAaA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAE;AAAd,SAAnB;AAAA,kBAAwChB;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,KAAK,EAAEE,OAFX;AAGI,QAAA,QAAQ,EAAEE,YAHd;AAII,QAAA,KAAK,eAAE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEJ;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAJX;AAKI,QAAA,WAAW,EAAGiB,QAAD,IAAcA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAL/B;AAMI,QAAA,SAAS,EAAExB,SANf;AAAA,kBAQKO,aAAa,CAACkB,GAAd,CAAmBV,MAAD,iBACf,QAAC,QAAD;AAAuB,UAAA,KAAK,EAAEA,MAA9B;AAAA,kCACI,QAAC,QAAD;AACI,YAAA,OAAO,EAAEP,OAAO,CAACS,OAAR,CAAgBF,MAAhB,IAA0B,CAAC,CADxC;AAEI,YAAA,QAAQ,EAAE,MAAMD,oBAAoB,CAACC,MAAD;AAFxC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAAeA,MAAf;AAAA;AAAA;AAAA;AAAA,gBADH;AARL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBD;KA5CeV,c","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {OutlinedInput, \n  InputLabel, \n  MenuItem, \n  FormControl, \n  ListItemText,\n  Select,\n  Checkbox,\n} from '@material-ui/core';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 400,\n    },\n  },\n};\n\n\nexport function SelectMultiple({ filterType, filterOptions, filters, setFilters }) {\n  const handleChange = (event) => {\n      const value = event.target.value\n      setFilters(value)\n  }\n\n  const handleCheckboxChange = (option) => {\n      const currentIndex = filters.indexOf(option)\n      const newFilters = [...filters]\n      \n      if (currentIndex === -1) {\n          newFilters.push(option)\n      } else {\n          newFilters.splice(currentIndex, 1)\n      }\n      \n      setFilters(newFilters)\n  }\n\n  return (\n      <div style={{margin: '20px 20px 20px 0'}}>\n          <FormControl fullWidth>\n              <InputLabel style={{paddingLeft: 10}}>{ filterType }</InputLabel>\n              <Select\n                  multiple\n                  value={filters}\n                  onChange={handleChange}\n                  input={<OutlinedInput label={filterType} />}\n                  renderValue={(selected) => selected.join(', ')}\n                  MenuProps={MenuProps}\n              >\n                  {filterOptions.map((option) => (\n                      <MenuItem key={option} value={option}>\n                          <Checkbox \n                              checked={filters.indexOf(option) > -1}\n                              onChange={() => handleCheckboxChange(option)}\n                          />\n                          <ListItemText primary={option} />\n                      </MenuItem>\n                  ))}\n              </Select>\n          </FormControl>\n      </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}