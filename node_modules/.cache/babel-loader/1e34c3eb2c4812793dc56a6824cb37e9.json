{"ast":null,"code":"var _jsxFileName = \"/home/nisgia/Desktop/generic_filtering/src/SelectMultiple.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { OutlinedInput, InputLabel, MenuItem, FormControl, ListItemText, Select, Checkbox } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 400\n    }\n  }\n};\nexport function SelectMultiple(_ref) {\n  _s();\n\n  let {\n    filterType,\n    filterOptions,\n    filters,\n    group,\n    applyFilters\n  } = _ref;\n  const activeFilters = filters.map((filter, i) => filter.name);\n  const [checked, setChecked] = useState([]);\n  useEffect(() => {\n    applyFilters(checked);\n  }, [checked, applyFilters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px 20px 20px 0'\n    },\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        style: {\n          paddingLeft: 10\n        },\n        children: filterType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        onClose: () => applyFilters(checked),\n        value: filters.map((item, i) => item.group === group && item.name),\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: filterType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => selected,\n        MenuProps: MenuProps,\n        children: filterOptions.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: type,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: activeFilters.indexOf(type) > -1,\n            onChange: e => setChecked(type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectMultiple, \"ELmdrENkHyl5zQ/YRZL0bNbAd7M=\");\n\n_c = SelectMultiple;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectMultiple\");","map":{"version":3,"sources":["/home/nisgia/Desktop/generic_filtering/src/SelectMultiple.js"],"names":["React","useEffect","useState","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","SelectMultiple","filterType","filterOptions","filters","group","applyFilters","activeFilters","map","filter","i","name","checked","setChecked","margin","paddingLeft","item","selected","type","indexOf","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,aAAR,EACEC,UADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,MALF,EAMEC,QANF,QAOO,mBAPP;;AASA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AASA,OAAO,SAASC,cAAT,OAAqF;AAAA;;AAAA,MAA7D;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA,KAAtC;AAA6CC,IAAAA;AAA7C,GAA6D;AAC1F,QAAMC,aAAa,GAAGH,OAAO,CAACI,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAeD,MAAM,CAACE,IAAlC,CAAtB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,YAAY,CAACM,OAAD,CAAZ;AAED,GAHQ,EAGN,CAACA,OAAD,EAAUN,YAAV,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACQ,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAE;AAAd,SAAnB;AAAA,kBAAwCb;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,OAAO,EAAE,MAAMI,YAAY,CAACM,OAAD,CAF7B;AAGE,QAAA,KAAK,EAAER,OAAO,CAACI,GAAR,CAAY,CAACQ,IAAD,EAAON,CAAP,KAAaM,IAAI,CAACX,KAAL,KAAeA,KAAf,IAAwBW,IAAI,CAACL,IAAtD,CAHT;AAIE,QAAA,KAAK,eAAE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAGT;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAJT;AAKE,QAAA,WAAW,EAAGe,QAAD,IAAcA,QAL7B;AAME,QAAA,SAAS,EAAErB,SANb;AAAA,kBAQGO,aAAa,CAACK,GAAd,CAAmBU,IAAD,iBACjB,QAAC,QAAD;AAAqB,UAAA,KAAK,EAAEA,IAA5B;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEX,aAAa,CAACY,OAAd,CAAsBD,IAAtB,IAA8B,CAAC,CAAlD;AAAqD,YAAA,QAAQ,EAAGE,CAAD,IAAOP,UAAU,CAACK,IAAD;AAAhF;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAeA,IAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AARH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA/BejB,c;;KAAAA,c","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {OutlinedInput, \n  InputLabel, \n  MenuItem, \n  FormControl, \n  ListItemText,\n  Select,\n  Checkbox,\n} from '@material-ui/core';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 400,\n    },\n  },\n};\n\nexport function SelectMultiple({ filterType, filterOptions, filters, group, applyFilters }) {\n  const activeFilters = filters.map((filter, i) => filter.name);\n  const [checked, setChecked] = useState([])\n\n  useEffect(() => {\n    applyFilters(checked);\n\n  }, [checked, applyFilters])\n\n  return (\n    <div style={{margin: '20px 20px 20px 0'}}>\n      <FormControl fullWidth>\n        <InputLabel style={{paddingLeft: 10}}>{ filterType }</InputLabel>\n        <Select\n          multiple\n          onClose={() => applyFilters(checked)}\n          value={filters.map((item, i) => item.group === group && item.name)}\n          input={<OutlinedInput label={ filterType } />}\n          renderValue={(selected) => selected}\n          MenuProps={MenuProps}\n        >\n          {filterOptions.map((type) => (\n            <MenuItem key={type} value={type}>\n              <Checkbox checked={activeFilters.indexOf(type) > -1} onChange={(e) => setChecked(type)}/>\n              <ListItemText primary={type} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}