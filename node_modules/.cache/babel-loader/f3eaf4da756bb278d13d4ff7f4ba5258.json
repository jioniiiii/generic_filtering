{"ast":null,"code":"var _jsxFileName = \"/home/nisgia/Desktop/generic_filtering/src/SelectMultiple.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { OutlinedInput, InputLabel, MenuItem, FormControl, ListItemText, Select, Checkbox } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 400\n    }\n  }\n};\nexport function SelectMultiple(_ref) {\n  _s();\n\n  let {\n    filterType,\n    filterOptions,\n    filters,\n    setFilters\n  } = _ref;\n  const [checked, setChecked] = useState([]);\n  useEffect(() => {\n    // Sync the checked filters with the parent component\n    setFilters(checked);\n  }, [checked, setFilters]);\n\n  const handleChange = event => {\n    const value = event.target.value;\n    setChecked(value);\n    setFilters(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px 20px 20px 0'\n    },\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        style: {\n          paddingLeft: 10\n        },\n        children: filterType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        value: checked,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: filterType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => selected.map(item => item.name).join(', '),\n        MenuProps: MenuProps,\n        children: filterOptions.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: type,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checked.indexOf(type) > -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectMultiple, \"ELmdrENkHyl5zQ/YRZL0bNbAd7M=\");\n\n_c = SelectMultiple;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectMultiple\");","map":{"version":3,"sources":["/home/nisgia/Desktop/generic_filtering/src/SelectMultiple.js"],"names":["React","useEffect","useState","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","SelectMultiple","filterType","filterOptions","filters","setFilters","checked","setChecked","handleChange","event","value","target","margin","paddingLeft","selected","map","item","name","join","type","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,aAAR,EACEC,UADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,MALF,EAMEC,QANF,QAOO,mBAPP;;AASA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AASA,OAAO,SAASC,cAAT,OAA4E;AAAA;;AAAA,MAApD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA;AAAtC,GAAoD;AACjF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAoB,IAAAA,UAAU,CAACC,OAAD,CAAV;AACD,GAHQ,EAGN,CAACA,OAAD,EAAUD,UAAV,CAHM,CAAT;;AAKA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAH,IAAAA,UAAU,CAACG,KAAD,CAAV;AACAL,IAAAA,UAAU,CAACK,KAAD,CAAV;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAnB;AAAA,kBAAyCX;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,KAAK,EAAEI,OAFT;AAGE,QAAA,QAAQ,EAAEE,YAHZ;AAIE,QAAA,KAAK,eAAE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEN;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAJT;AAKE,QAAA,WAAW,EAAGY,QAAD,IAAcA,QAAQ,CAACC,GAAT,CAAcC,IAAD,IAAUA,IAAI,CAACC,IAA5B,EAAkCC,IAAlC,CAAuC,IAAvC,CAL7B;AAME,QAAA,SAAS,EAAEtB,SANb;AAAA,kBAQGO,aAAa,CAACY,GAAd,CAAmBI,IAAD,iBACjB,QAAC,QAAD;AAAqB,UAAA,KAAK,EAAEA,IAA5B;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,OAAO,EAAEb,OAAO,CAACc,OAAR,CAAgBD,IAAhB,IAAwB,CAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAeA,IAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AARH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GApCelB,c;;KAAAA,c","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {OutlinedInput, \n  InputLabel, \n  MenuItem, \n  FormControl, \n  ListItemText,\n  Select,\n  Checkbox,\n} from '@material-ui/core';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 400,\n    },\n  },\n};\n\nexport function SelectMultiple({ filterType, filterOptions, filters, setFilters }) {\n  const [checked, setChecked] = useState([])\n\n  useEffect(() => {\n    // Sync the checked filters with the parent component\n    setFilters(checked);\n  }, [checked, setFilters]);\n\n  const handleChange = (event) => {\n    const value = event.target.value;\n    setChecked(value);\n    setFilters(value);\n  };\n\n  return (\n    <div style={{ margin: '20px 20px 20px 0' }}>\n      <FormControl fullWidth>\n        <InputLabel style={{ paddingLeft: 10 }}>{filterType}</InputLabel>\n        <Select\n          multiple\n          value={checked}\n          onChange={handleChange}\n          input={<OutlinedInput label={filterType} />}\n          renderValue={(selected) => selected.map((item) => item.name).join(', ')}\n          MenuProps={MenuProps}\n        >\n          {filterOptions.map((type) => (\n            <MenuItem key={type} value={type}>\n              <Checkbox checked={checked.indexOf(type) > -1} />\n              <ListItemText primary={type} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}