{"ast":null,"code":"var _jsxFileName = \"/home/nisgia/Desktop/generic_filtering/src/SelectMultiple.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { OutlinedInput, InputLabel, MenuItem, FormControl, ListItemText, Select, Checkbox } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 400\n    }\n  }\n};\nexport function SelectMultiple(_ref) {\n  _s();\n\n  let {\n    filterType,\n    filterOptions,\n    data,\n    citiesCoordinates,\n    setFilteredCities\n  } = _ref;\n  const [checked, setChecked] = useState([]);\n  useEffect(() => {\n    const filterCities = () => {\n      const filtered = Object.keys(data).reduce((acc, cityId) => {\n        const cityHazards = data[cityId];\n        const matchesFilters = cityHazards.some(hazard => {\n          // Check each hazard's criteria based on the current filters in `checked`\n          const matchesType = checked.length === 0 || checked.includes(hazard.type);\n          const matchesMagnitude = checked.length === 0 || checked.includes(hazard.magnitude);\n          const matchesProbability = checked.length === 0 || checked.includes(hazard.probability);\n          return matchesType && matchesMagnitude && matchesProbability;\n        });\n\n        if (matchesFilters) {\n          acc[cityId] = citiesCoordinates[cityId];\n        }\n\n        return acc;\n      }, {});\n      setFilteredCities(filtered);\n    };\n\n    filterCities();\n  }, [checked, data, citiesCoordinates, setFilteredCities]);\n\n  const handleChange = event => {\n    setChecked(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px 20px 20px 0'\n    },\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: filterType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        value: checked,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: filterType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => selected.join(', '),\n        MenuProps: MenuProps,\n        children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checked.includes(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectMultiple, \"ELmdrENkHyl5zQ/YRZL0bNbAd7M=\");\n\n_c = SelectMultiple;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectMultiple\");","map":{"version":3,"sources":["/home/nisgia/Desktop/generic_filtering/src/SelectMultiple.js"],"names":["React","useEffect","useState","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","SelectMultiple","filterType","filterOptions","data","citiesCoordinates","setFilteredCities","checked","setChecked","filterCities","filtered","Object","keys","reduce","acc","cityId","cityHazards","matchesFilters","some","hazard","matchesType","length","includes","type","matchesMagnitude","magnitude","matchesProbability","probability","handleChange","event","target","value","margin","selected","join","map","option"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {OutlinedInput, \n  InputLabel, \n  MenuItem, \n  FormControl, \n  ListItemText,\n  Select,\n  Checkbox,\n} from '@material-ui/core';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 400,\n    },\n  },\n};\n\nexport function SelectMultiple({ filterType, filterOptions, data, citiesCoordinates, setFilteredCities }) {\n  const [checked, setChecked] = useState([]);\n\n  useEffect(() => {\n    const filterCities = () => {\n      const filtered = Object.keys(data).reduce((acc, cityId) => {\n        const cityHazards = data[cityId];\n        const matchesFilters = cityHazards.some(hazard => {\n          // Check each hazard's criteria based on the current filters in `checked`\n          const matchesType = checked.length === 0 || checked.includes(hazard.type);\n          const matchesMagnitude = checked.length === 0 || checked.includes(hazard.magnitude);\n          const matchesProbability = checked.length === 0 || checked.includes(hazard.probability);\n\n          return matchesType && matchesMagnitude && matchesProbability;\n        });\n\n        if (matchesFilters) {\n          acc[cityId] = citiesCoordinates[cityId];\n        }\n        return acc;\n      }, {});\n\n      setFilteredCities(filtered);\n    };\n\n    filterCities();\n  }, [checked, data, citiesCoordinates, setFilteredCities]);\n\n  const handleChange = (event) => {\n    setChecked(event.target.value);\n  };\n\n  return (\n    <div style={{ margin: '20px 20px 20px 0' }}>\n      <FormControl fullWidth>\n        <InputLabel>{filterType}</InputLabel>\n        <Select\n          multiple\n          value={checked}\n          onChange={handleChange}\n          input={<OutlinedInput label={filterType} />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {filterOptions.map((option) => (\n            <MenuItem key={option} value={option}>\n              <Checkbox checked={checked.includes(option)} />\n              <ListItemText primary={option} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}