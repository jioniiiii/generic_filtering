{"ast":null,"code":"var _jsxFileName = \"/home/nisgia/Desktop/generic_filtering/src/SelectMultiple.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { OutlinedInput, InputLabel, MenuItem, FormControl, ListItemText, Select, Checkbox } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 400\n    }\n  }\n};\nexport function SelectMultiple(_ref) {\n  _s();\n\n  let {\n    filterType,\n    filterOptions,\n    filters,\n    group,\n    updateFilters\n  } = _ref;\n  const [checked, setChecked] = useState([]);\n  useEffect(() => {\n    if (checked.length > 0) {\n      // If an item is checked/unchecked, update the filters\n      const newFilters = filters.includes(checked) ? filters.filter(f => f !== checked) : [...filters, checked];\n      updateFilters(group, newFilters);\n    }\n  }, [checked]);\n\n  const handleCheck = value => {\n    setChecked(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px 20px 20px 0'\n    },\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        style: {\n          paddingLeft: 10\n        },\n        children: filterType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        value: filters,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: filterType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 26\n        }, this),\n        renderValue: selected => selected.join(', '),\n        MenuProps: MenuProps,\n        children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: filters.indexOf(option) > -1,\n            onChange: () => handleCheck(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 27\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SelectMultiple, \"ELmdrENkHyl5zQ/YRZL0bNbAd7M=\");\n\n_c = SelectMultiple;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectMultiple\");","map":{"version":3,"sources":["/home/nisgia/Desktop/generic_filtering/src/SelectMultiple.js"],"names":["React","useEffect","useState","OutlinedInput","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","SelectMultiple","filterType","filterOptions","filters","group","updateFilters","checked","setChecked","length","newFilters","includes","filter","f","handleCheck","value","margin","paddingLeft","selected","join","map","option","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,aAAR,EACEC,UADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,MALF,EAMEC,QANF,QAOO,mBAPP;;AASA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AAUA,OAAO,SAASC,cAAT,OAAsF;AAAA;;AAAA,MAA9D;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA,KAAtC;AAA6CC,IAAAA;AAA7C,GAA8D;AAC3F,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsB,OAAO,CAACE,MAAR,GAAiB,CAArB,EAAwB;AACpB;AACA,YAAMC,UAAU,GAAGN,OAAO,CAACO,QAAR,CAAiBJ,OAAjB,IACbH,OAAO,CAACQ,MAAR,CAAeC,CAAC,IAAIA,CAAC,KAAKN,OAA1B,CADa,GAEb,CAAC,GAAGH,OAAJ,EAAaG,OAAb,CAFN;AAIAD,MAAAA,aAAa,CAACD,KAAD,EAAQK,UAAR,CAAb;AACH;AACJ,GATQ,EASN,CAACH,OAAD,CATM,CAAT;;AAWA,QAAMO,WAAW,GAAIC,KAAD,IAAW;AAC3BP,IAAAA,UAAU,CAACO,KAAD,CAAV;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAE;AAAd,SAAnB;AAAA,kBAAwCf;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,QAAQ,MADZ;AAEI,QAAA,KAAK,EAAEE,OAFX;AAGI,QAAA,KAAK,eAAE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAGF;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAHX;AAII,QAAA,WAAW,EAAGgB,QAAD,IAAcA,QAAQ,CAACC,IAAT,CAAc,IAAd,CAJ/B;AAKI,QAAA,SAAS,EAAEvB,SALf;AAAA,kBAOKO,aAAa,CAACiB,GAAd,CAAmBC,MAAD,iBACf,QAAC,QAAD;AAAuB,UAAA,KAAK,EAAEA,MAA9B;AAAA,kCACI,QAAC,QAAD;AACI,YAAA,OAAO,EAAEjB,OAAO,CAACkB,OAAR,CAAgBD,MAAhB,IAA0B,CAAC,CADxC;AAEI,YAAA,QAAQ,EAAE,MAAMP,WAAW,CAACO,MAAD;AAF/B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAAeA,MAAf;AAAA;AAAA;AAAA;AAAA,gBADH;AAPL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBD;;GA1CepB,c;;KAAAA,c","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {OutlinedInput, \n  InputLabel, \n  MenuItem, \n  FormControl, \n  ListItemText,\n  Select,\n  Checkbox,\n} from '@material-ui/core';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 400,\n    },\n  },\n};\n\n\nexport function SelectMultiple({ filterType, filterOptions, filters, group, updateFilters }) {\n  const [checked, setChecked] = useState([])\n\n  useEffect(() => {\n      if (checked.length > 0) {\n          // If an item is checked/unchecked, update the filters\n          const newFilters = filters.includes(checked) \n              ? filters.filter(f => f !== checked)\n              : [...filters, checked]\n          \n          updateFilters(group, newFilters)\n      }\n  }, [checked])\n\n  const handleCheck = (value) => {\n      setChecked(value)\n  }\n\n  return (\n      <div style={{margin: '20px 20px 20px 0'}}>\n          <FormControl fullWidth>\n              <InputLabel style={{paddingLeft: 10}}>{ filterType }</InputLabel>\n              <Select\n                  multiple\n                  value={filters}\n                  input={<OutlinedInput label={ filterType } />}\n                  renderValue={(selected) => selected.join(', ')}\n                  MenuProps={MenuProps}\n              >\n                  {filterOptions.map((option) => (\n                      <MenuItem key={option} value={option}>\n                          <Checkbox \n                              checked={filters.indexOf(option) > -1}\n                              onChange={() => handleCheck(option)}\n                          />\n                          <ListItemText primary={option} />\n                      </MenuItem>\n                  ))}\n              </Select>\n          </FormControl>\n      </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}